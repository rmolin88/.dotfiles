[general]
# List of accounts to be synced, separated by a comma.
accounts = molinamail,gmail
# Path to file with arbitrary Python code to be loaded
pythonfile = ~/.offlineimaprc.py
# Controls how many accounts may be synced simultaneously
maxsyncaccounts = 1
# systemctl enable --user offlineimap@molinamail.service

[mbnames]
enabled = yes
filename = ~/.config/neomutt/mailboxes
header = "mailboxes "
peritem = "+%(accountname)s/%(foldername)s"
sep = " "
footer = "\n"

[Account gmail]
# Identifier for the local repository; e.g. the maildir to be synced via IMAP.
localrepository = gmail-local
# Identifier for the remote repository; i.e. the actual IMAP, usually non-local.
remoterepository = gmail-remote
# Minutes between syncs
autorefresh = 0.5
# Quick-syncs do not update if the only changes were to IMAP flags.
# autorefresh=0.5 together with quick=10 yields
# 10 quick refreshes between each full refresh, with 0.5 minutes between every 
# refresh, regardless of type.
quick = 10

[Repository gmail-local]
# OfflineIMAP supports Maildir, GmailMaildir, and IMAP for local repositories.
type = GmailMaildir
# Where should the mail be placed?
localfolders = ~/mail/gmail

[Repository gmail-remote]
# Remote repos can be IMAP or Gmail, the latter being a preconfigured IMAP.
type = Gmail
remoteuser = rmolin88@gmail.com
remotepasseval = get_gmail_pass()
nametrans = lambda foldername:  re.sub ('^\[gmail\]', 'bak',
                                re.sub ('sent_mail', 'sent',
                                re.sub ('starred', 'flagged',
                                re.sub (' ', '_', foldername.lower()))))
folderfilter = lambda foldername: foldername not in ['[Gmail]/All Mail']
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
# Necessary to work around https://github.com/OfflineIMAP/offlineimap/issues/573 (versions 7.0.12, 7.2.1)
ssl_version = tls1_2
# Instead of closing the connection once a sync is complete, offlineimap will
# send empty data to the server to hold the connection open. A value of 60
# attempts to hold the connection for a minute between syncs (both quick and
# autorefresh).This setting has no effect if autorefresh and holdconnectionopen
# are not both set.
keepalive = 60
# OfflineIMAP normally closes IMAP server connections between refreshes if
# the global option autorefresh is specified.  If you wish it to keep the
# connection open, set this to true. This setting has no effect if autorefresh
# is not set.
holdconnectionopen = yes

[Account molinamail]
# Identifier for the local repository; e.g. the maildir to be synced via IMAP.
localrepository = molinamail-local
# Identifier for the remote repository; i.e. the actual IMAP, usually non-local.
remoterepository = molinamail-remote
# Minutes between syncs
autorefresh = 0.5
# Quick-syncs do not update if the only changes were to IMAP flags.
# autorefresh=0.5 together with quick=10 yields
# 10 quick refreshes between each full refresh, with 0.5 minutes between every 
# refresh, regardless of type.
quick = 10

[Repository molinamail-local]
# OfflineIMAP supports Maildir, GmailMaildir, and IMAP for local repositories.
type = Maildir
# Where should the mail be placed?
localfolders = ~/mail/molinamail

[Repository molinamail-remote]
# Remote repos can be IMAP or Gmail, the latter being a preconfigured IMAP.
type = IMAP
remotehost = box.molinamail.com
remoteuser = me@molinamail.com
remotepasseval = get_molinamail_pass()
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
# Instead of closing the connection once a sync is complete, offlineimap will
# send empty data to the server to hold the connection open. A value of 60
# attempts to hold the connection for a minute between syncs (both quick and
# autorefresh).This setting has no effect if autorefresh and holdconnectionopen
# are not both set.
keepalive = 60
# OfflineIMAP normally closes IMAP server connections between refreshes if
# the global option autorefresh is specified.  If you wish it to keep the
# connection open, set this to true. This setting has no effect if autorefresh
# is not set.
holdconnectionopen = yes

# vim: ft=dosini
