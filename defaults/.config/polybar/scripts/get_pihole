#!/usr/bin/env python

import sys
import requests


class PiHole():
    """
    Gets pihole data, using the 'summary' API request.
    """

    def get_status(self):
        """Returns current pihole server status"""

        self.data = self.get_raw_data('summary')

        if not self.data:
            return False

        if 'status' not in self.data:
            return False

        if self.data.get('status') == 'enabled':
            return True

        return False

    def __init__(self, ip_add):
        """
        Gets pihole data, using the 'summary' API request.
        """

        self.url = ''
        self.data = dict()
        if not ip_add:
            return

        self.url = 'http://' + ip_add + '/admin/api.php?'

    def get_raw_data(self, query):
        """
        Returns dict with pihole data, using the 'summary' API request.
        """

        if not self.url or not query:
            return dict()

        url = self.url + query
        try:
            resp = requests.get(url)
        except Exception:
            sys.exit('Bad Host')

        try:
            data = resp.json()
        except Exception:
            sys.exit('Bad response')

        return data

    def get(self, key):
        """
        Returns key value if present at summary query

        Example `get(['ads_blocked_today'])`
        Returns negative value if failed to obtain such key
        """

        if not key:
            return []

        if not self.get_status():
            print('disabled')
            return []

        ret = []
        for k in key:
            if k not in self.data:
                continue
            ret += self.data.get(k)
        return ret


if __name__ == '__main__':
    # TODO get args ip address
    hole = PiHole('192.168.128.199')
    dhole = hole.get(['ads_blocked_today', 'ads_percentage_today'])
    if not dhole:
        sys.exit(1)
    print(dhole)
    #  d = float(self.data.get(k).replace(',', ''))
    #  if d > 100:
        #  d /= 1000
    #  ret += [str(round(d, 1) )]
